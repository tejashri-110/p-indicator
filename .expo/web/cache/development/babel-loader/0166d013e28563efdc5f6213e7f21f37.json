{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _PickerItem = _interopRequireDefault(require(\"./PickerItem\"));\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\mitba\\\\React Native\\\\p-indicator-1\\\\node_modules\\\\@react-native-community\\\\picker\\\\js\\\\Picker.web.js\";\n\nvar myCreateElement = _reactNative.createElement || _reactNative.unstable_createElement;\n\nvar Select = function Select(props) {\n  return myCreateElement('select', props);\n};\n\nvar Picker = (0, _react.forwardRef)(function (props, forwardedRef) {\n  var enabled = props.enabled,\n      onValueChange = props.onValueChange,\n      selectedValue = props.selectedValue,\n      itemStyle = props.itemStyle,\n      mode = props.mode,\n      prompt = props.prompt,\n      other = (0, _objectWithoutProperties2.default)(props, [\"enabled\", \"onValueChange\", \"selectedValue\", \"itemStyle\", \"mode\", \"prompt\"]);\n  var hostRef = (0, _react.useRef)(null);\n\n  var handleChange = _react.default.useCallback(function (e) {\n    var _e$target = e.target,\n        selectedIndex = _e$target.selectedIndex,\n        value = _e$target.value;\n\n    if (onValueChange) {\n      onValueChange(value, selectedIndex);\n    }\n  }, [onValueChange]);\n\n  return _react.default.createElement(Select, (0, _extends2.default)({\n    disabled: enabled === false ? true : undefined,\n    onChange: handleChange,\n    ref: hostRef,\n    value: selectedValue\n  }, other, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 5\n    }\n  }));\n});\nPicker.Item = _PickerItem.default;\nvar _default = Picker;\nexports.default = _default;","map":{"version":3,"sources":["C:/Users/mitba/React Native/p-indicator-1/node_modules/@react-native-community/picker/js/Picker.web.js"],"names":["myCreateElement","createElement","unstable_createElement","Select","props","Picker","forwardedRef","enabled","onValueChange","selectedValue","itemStyle","mode","prompt","other","hostRef","handleChange","React","useCallback","e","target","selectedIndex","value","undefined","Item","PickerItem"],"mappings":";;;;;;;;;;;;;AAOA;;AAOA;;AACA;;;;;AAgBA,IAAMA,eAAe,GAAGC,8BAAiBC,mCAAzC;;AAEA,IAAMC,MAAM,GAAG,SAATA,MAAS,CAACC,KAAD;AAAA,SAAgBJ,eAAe,CAAC,QAAD,EAAWI,KAAX,CAA/B;AAAA,CAAf;;AAEA,IAAMC,MAAM,GAAG,uBAA2B,UAACD,KAAD,EAAQE,YAAR,EAAyB;AAAA,MAE/DC,OAF+D,GAS7DH,KAT6D,CAE/DG,OAF+D;AAAA,MAG/DC,aAH+D,GAS7DJ,KAT6D,CAG/DI,aAH+D;AAAA,MAI/DC,aAJ+D,GAS7DL,KAT6D,CAI/DK,aAJ+D;AAAA,MAK/DC,SAL+D,GAS7DN,KAT6D,CAK/DM,SAL+D;AAAA,MAM/DC,IAN+D,GAS7DP,KAT6D,CAM/DO,IAN+D;AAAA,MAO/DC,MAP+D,GAS7DR,KAT6D,CAO/DQ,MAP+D;AAAA,MAQ5DC,KAR4D,0CAS7DT,KAT6D;AAWjE,MAAMU,OAAO,GAAG,mBAAO,IAAP,CAAhB;;AAEA,MAAMC,YAAY,GAAGC,eAAMC,WAAN,CACnB,UAACC,CAAD,EAAe;AAAA,oBACkBA,CAAC,CAACC,MADpB;AAAA,QACNC,aADM,aACNA,aADM;AAAA,QACSC,KADT,aACSA,KADT;;AAEb,QAAIb,aAAJ,EAAmB;AACjBA,MAAAA,aAAa,CAACa,KAAD,EAAQD,aAAR,CAAb;AACD;AACF,GANkB,EAOnB,CAACZ,aAAD,CAPmB,CAArB;;AAUA,SAEE,6BAAC,MAAD;AACE,IAAA,QAAQ,EAAED,OAAO,KAAK,KAAZ,GAAoB,IAApB,GAA2Be,SADvC;AAEE,IAAA,QAAQ,EAAEP,YAFZ;AAGE,IAAA,GAAG,EAAED,OAHP;AAIE,IAAA,KAAK,EAAEL;AAJT,KAKMI,KALN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAFF;AAUD,CAjCc,CAAf;AAoCAR,MAAM,CAACkB,IAAP,GAAcC,mBAAd;eAEenB,M","sourcesContent":["/**\n * Copyright (c) Nicolas Gallagher.\n *\n * @flow\n * @format\n */\n\nimport React from 'react';\nimport type {\n  ViewStyleProp,\n  TextStyleProp,\n} from 'react-native/Libraries/StyleSheet/StyleSheet';\nimport type {ViewProps} from 'react-native/Libraries/Components/View/ViewPropTypes';\n// $FlowFixMe\nimport {createElement, unstable_createElement} from 'react-native';\nimport PickerItem from './PickerItem';\nimport {forwardRef, useRef} from 'react';\n\ntype PickerProps = {\n  ...ViewProps,\n  children?: typeof PickerItem | Array<typeof PickerItem>,\n  enabled?: boolean,\n  onValueChange?: (number | string, number) => void,\n  selectedValue?: number | string,\n  style?: ViewStyleProp,\n  /* compat */\n  itemStyle?: TextStyleProp,\n  mode?: string,\n  prompt?: string,\n};\n\nconst myCreateElement = createElement || unstable_createElement;\n\nconst Select = (props: any) => myCreateElement('select', props);\n\nconst Picker = forwardRef<PickerProps, *>((props, forwardedRef) => {\n  const {\n    enabled,\n    onValueChange,\n    selectedValue,\n    itemStyle,\n    mode,\n    prompt,\n    ...other\n  } = props;\n\n  const hostRef = useRef(null);\n\n  const handleChange = React.useCallback<any>(\n    (e: Object) => {\n      const {selectedIndex, value} = e.target;\n      if (onValueChange) {\n        onValueChange(value, selectedIndex);\n      }\n    },\n    [onValueChange],\n  );\n\n  return (\n    // $FlowFixMe\n    <Select\n      disabled={enabled === false ? true : undefined}\n      onChange={handleChange}\n      ref={hostRef}\n      value={selectedValue}\n      {...other}\n    />\n  );\n});\n\n// $FlowFixMe\nPicker.Item = PickerItem;\n\nexport default Picker;\n"]},"metadata":{},"sourceType":"script"}