{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _common = require(\"@react-native-firebase/app/lib/common\");\n\nvar FirestoreGeoPoint = function () {\n  function FirestoreGeoPoint(latitude, longitude) {\n    (0, _classCallCheck2.default)(this, FirestoreGeoPoint);\n\n    if ((0, _common.isUndefined)(latitude) || (0, _common.isUndefined)(longitude)) {\n      throw new Error('firebase.firestore.GeoPoint constructor expected latitude and longitude values.');\n    }\n\n    if (!(0, _common.isNumber)(latitude)) {\n      throw new Error(\"firebase.firestore.GeoPoint 'latitude' must be a number value.\");\n    }\n\n    if (!(0, _common.isNumber)(longitude)) {\n      throw new Error(\"firebase.firestore.GeoPoint 'longitude' must be a number value.\");\n    }\n\n    if (!(0, _common.isFinite)(latitude) || latitude < -90 || latitude > 90) {\n      throw new Error(\"firebase.firestore.GeoPoint 'longitude' must be a number between -90 and 90, but was: \" + latitude + \".\");\n    }\n\n    if (!(0, _common.isFinite)(longitude) || longitude < -180 || longitude > 180) {\n      throw new Error(\"firebase.firestore.GeoPoint 'longitude' must be a number between -180 and 180, but was: \" + longitude + \".\");\n    }\n\n    this._latitude = latitude;\n    this._longitude = longitude;\n  }\n\n  (0, _createClass2.default)(FirestoreGeoPoint, [{\n    key: \"isEqual\",\n    value: function isEqual(other) {\n      if (!(other instanceof FirestoreGeoPoint)) {\n        throw new Error(\"firebase.firestore.GeoPoint.isEqual(*) 'other' expected an instance of GeoPoint.\");\n      }\n\n      return this._latitude === other._latitude && this._longitude === other._longitude;\n    }\n  }, {\n    key: \"latitude\",\n    get: function get() {\n      return this._latitude;\n    }\n  }, {\n    key: \"longitude\",\n    get: function get() {\n      return this._longitude;\n    }\n  }]);\n  return FirestoreGeoPoint;\n}();\n\nexports.default = FirestoreGeoPoint;","map":{"version":3,"sources":["C:/Users/mitba/Razorpay/p-indicator-1/node_modules/@react-native-firebase/firestore/lib/FirestoreGeoPoint.js"],"names":["FirestoreGeoPoint","latitude","longitude","Error","_latitude","_longitude","other"],"mappings":";;;;;;;;;;;AAiBA;;IAEqBA,iB;AACnB,6BAAYC,QAAZ,EAAsBC,SAAtB,EAAiC;AAAA;;AAC/B,QAAI,yBAAYD,QAAZ,KAAyB,yBAAYC,SAAZ,CAA7B,EAAqD;AACnD,YAAM,IAAIC,KAAJ,CACJ,iFADI,CAAN;AAGD;;AAED,QAAI,CAAC,sBAASF,QAAT,CAAL,EAAyB;AACvB,YAAM,IAAIE,KAAJ,CAAU,gEAAV,CAAN;AACD;;AAED,QAAI,CAAC,sBAASD,SAAT,CAAL,EAA0B;AACxB,YAAM,IAAIC,KAAJ,CAAU,iEAAV,CAAN;AACD;;AAED,QAAI,CAAC,sBAASF,QAAT,CAAD,IAAuBA,QAAQ,GAAG,CAAC,EAAnC,IAAyCA,QAAQ,GAAG,EAAxD,EAA4D;AAC1D,YAAM,IAAIE,KAAJ,4FACqFF,QADrF,OAAN;AAGD;;AAED,QAAI,CAAC,sBAASC,SAAT,CAAD,IAAwBA,SAAS,GAAG,CAAC,GAArC,IAA4CA,SAAS,GAAG,GAA5D,EAAiE;AAC/D,YAAM,IAAIC,KAAJ,8FACuFD,SADvF,OAAN;AAGD;;AAED,SAAKE,SAAL,GAAiBH,QAAjB;AACA,SAAKI,UAAL,GAAkBH,SAAlB;AACD;;;;4BAUOI,K,EAAO;AACb,UAAI,EAAEA,KAAK,YAAYN,iBAAnB,CAAJ,EAA2C;AACzC,cAAM,IAAIG,KAAJ,CACJ,kFADI,CAAN;AAGD;;AAED,aAAO,KAAKC,SAAL,KAAmBE,KAAK,CAACF,SAAzB,IAAsC,KAAKC,UAAL,KAAoBC,KAAK,CAACD,UAAvE;AACD;;;wBAhBc;AACb,aAAO,KAAKD,SAAZ;AACD;;;wBAEe;AACd,aAAO,KAAKC,UAAZ;AACD","sourcesContent":["/*\n * Copyright (c) 2016-present Invertase Limited & Contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this library except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\n\nimport { isFinite, isNumber, isUndefined } from '@react-native-firebase/app/lib/common';\n\nexport default class FirestoreGeoPoint {\n  constructor(latitude, longitude) {\n    if (isUndefined(latitude) || isUndefined(longitude)) {\n      throw new Error(\n        'firebase.firestore.GeoPoint constructor expected latitude and longitude values.',\n      );\n    }\n\n    if (!isNumber(latitude)) {\n      throw new Error(\"firebase.firestore.GeoPoint 'latitude' must be a number value.\");\n    }\n\n    if (!isNumber(longitude)) {\n      throw new Error(\"firebase.firestore.GeoPoint 'longitude' must be a number value.\");\n    }\n\n    if (!isFinite(latitude) || latitude < -90 || latitude > 90) {\n      throw new Error(\n        `firebase.firestore.GeoPoint 'longitude' must be a number between -90 and 90, but was: ${latitude}.`,\n      );\n    }\n\n    if (!isFinite(longitude) || longitude < -180 || longitude > 180) {\n      throw new Error(\n        `firebase.firestore.GeoPoint 'longitude' must be a number between -180 and 180, but was: ${longitude}.`,\n      );\n    }\n\n    this._latitude = latitude;\n    this._longitude = longitude;\n  }\n\n  get latitude() {\n    return this._latitude;\n  }\n\n  get longitude() {\n    return this._longitude;\n  }\n\n  isEqual(other) {\n    if (!(other instanceof FirestoreGeoPoint)) {\n      throw new Error(\n        \"firebase.firestore.GeoPoint.isEqual(*) 'other' expected an instance of GeoPoint.\",\n      );\n    }\n\n    return this._latitude === other._latitude && this._longitude === other._longitude;\n  }\n}\n"]},"metadata":{},"sourceType":"script"}