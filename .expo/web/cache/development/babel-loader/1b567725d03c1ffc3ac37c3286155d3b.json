{"ast":null,"code":"'use strict';\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.RadioButtonLabel = exports.RadioButtonInput = exports.RadioButton = exports.default = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _assertThisInitialized2 = _interopRequireDefault(require(\"@babel/runtime/helpers/assertThisInitialized\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _Style = _interopRequireDefault(require(\"./Style.js\"));\n\nvar _jsxFileName = \"C:\\\\Users\\\\mitba\\\\Razorpay\\\\p-indicator-1\\\\node_modules\\\\react-native-simple-radio-button\\\\lib\\\\SimpleRadioButton.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nvar React = require('react');\n\nvar ReactNative = require('react-native');\n\nvar Text = ReactNative.Text,\n    View = ReactNative.View,\n    TouchableOpacity = ReactNative.TouchableOpacity,\n    TouchableWithoutFeedback = ReactNative.TouchableWithoutFeedback,\n    LayoutAnimation = ReactNative.LayoutAnimation,\n    Platform = ReactNative.Platform,\n    UIManager = ReactNative.UIManager;\n\nvar RadioForm = function (_React$Component) {\n  (0, _inherits2.default)(RadioForm, _React$Component);\n\n  var _super = _createSuper(RadioForm);\n\n  function RadioForm(props) {\n    var _this;\n\n    (0, _classCallCheck2.default)(this, RadioForm);\n    _this = _super.call(this, props);\n    _this.state = {\n      is_active_index: props.initial\n    };\n\n    if (Platform.OS === 'android') {\n      UIManager.setLayoutAnimationEnabledExperimental && UIManager.setLayoutAnimationEnabledExperimental(true);\n    }\n\n    _this._renderButton = _this._renderButton.bind((0, _assertThisInitialized2.default)(_this));\n    return _this;\n  }\n\n  (0, _createClass2.default)(RadioForm, [{\n    key: \"updateIsActiveIndex\",\n    value: function updateIsActiveIndex(index) {\n      this.setState({\n        is_active_index: index\n      });\n      this.props.onPress(this.props.radio_props[index], index);\n    }\n  }, {\n    key: \"clearSelection\",\n    value: function clearSelection() {\n      this.setState({\n        is_active_index: -1\n      });\n    }\n  }, {\n    key: \"_renderButton\",\n    value: function _renderButton(obj, i) {\n      var _this2 = this;\n\n      return React.createElement(RadioButton, {\n        accessible: this.props.accessible,\n        accessibilityLabel: this.props.accessibilityLabel ? this.props.accessibilityLabel + '|' + i : 'radioButton' + '|' + i,\n        testID: this.props.testID ? this.props.testID + '|' + i : 'radioButton' + '|' + i,\n        isSelected: this.state.is_active_index === i,\n        obj: obj,\n        key: i,\n        index: i,\n        buttonColor: this.state.is_active_index === i ? this.props.selectedButtonColor : this.props.buttonColor,\n        buttonSize: this.props.buttonSize,\n        buttonOuterSize: this.props.buttonOuterSize,\n        labelHorizontal: this.props.labelHorizontal,\n        labelColor: this.state.is_active_index === i ? this.props.selectedLabelColor : this.props.labelColor,\n        labelStyle: this.props.labelStyle,\n        style: this.props.radioStyle,\n        animation: this.props.animation,\n        disabled: this.props.disabled,\n        onPress: function onPress(value, index) {\n          _this2.props.onPress(value, index);\n\n          _this2.setState({\n            is_active_index: index\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 7\n        }\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var render_content = false;\n\n      if (this.props.radio_props.length) {\n        render_content = this.props.radio_props.map(this._renderButton);\n      } else {\n        render_content = this.props.children;\n      }\n\n      return React.createElement(View, {\n        style: [_Style.default.radioFrom, this.props.style, this.props.formHorizontal && _Style.default.formHorizontal],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 7\n        }\n      }, render_content);\n    }\n  }]);\n  return RadioForm;\n}(React.Component);\n\nexports.default = RadioForm;\nRadioForm.defaultProps = {\n  radio_props: [],\n  initial: 0,\n  buttonColor: '#2196f3',\n  selectedButtonColor: '#2196f3',\n  formHorizontal: false,\n  labelHorizontal: true,\n  animation: true,\n  labelColor: '#000',\n  selectedLabelColor: '#000',\n  wrapStyle: {},\n  disabled: false\n};\n\nvar RadioButton = function (_React$Component2) {\n  (0, _inherits2.default)(RadioButton, _React$Component2);\n\n  var _super2 = _createSuper(RadioButton);\n\n  function RadioButton(props) {\n    var _this3;\n\n    (0, _classCallCheck2.default)(this, RadioButton);\n    _this3 = _super2.call(this, props);\n    _this3.state = {};\n    return _this3;\n  }\n\n  (0, _createClass2.default)(RadioButton, [{\n    key: \"shouldComponentUpdate\",\n    value: function shouldComponentUpdate(nextProps, nextState) {\n      return true;\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      if (this.props.animation) {\n        LayoutAnimation.spring();\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var c = this.props.children;\n      var idSeparator = this.props.idSeparator ? this.props.idSeparator : '|';\n      var idSeparatorAccessibilityLabelIndex = this.props.accessibilityLabel ? this.props.accessibilityLabel.indexOf(idSeparator) : -1;\n      var idSeparatorTestIdIndex = this.props.testID ? this.props.testID.indexOf(idSeparator) : -1;\n      var accessibilityLabel = this.props.accessibilityLabel ? idSeparatorAccessibilityLabelIndex !== -1 ? this.props.accessibilityLabel.substring(0, idSeparatorAccessibilityLabelIndex) : this.props.accessibilityLabel : 'radioButton';\n      var testID = this.props.testID ? idSeparatorTestIdIndex !== -1 ? this.props.testID.substring(0, idSeparatorTestIdIndex) : this.props.testID : 'radioButton';\n      var accessibilityLabelIndex = this.props.accessibilityLabel && idSeparatorAccessibilityLabelIndex !== -1 ? this.props.accessibilityLabel.substring(idSeparatorAccessibilityLabelIndex + 1) : '';\n      var testIDIndex = this.props.testID && testIDIndex !== -1 ? this.props.testID.split(testIDIndex + 1) : '';\n      var renderContent = false;\n      renderContent = c ? React.createElement(View, {\n        style: [_Style.default.radioWrap, this.props.style, !this.props.labelHorizontal && _Style.default.labelVerticalWrap],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 7\n        }\n      }, c) : React.createElement(View, {\n        style: [_Style.default.radioWrap, this.props.style, !this.props.labelHorizontal && _Style.default.labelVerticalWrap],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 7\n        }\n      }, React.createElement(RadioButtonInput, (0, _extends2.default)({}, this.props, {\n        accessibilityLabel: accessibilityLabel + 'Input' + accessibilityLabelIndex,\n        testID: testID + 'Input' + testIDIndex,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 9\n        }\n      })), React.createElement(RadioButtonLabel, (0, _extends2.default)({}, this.props, {\n        accessibilityLabel: accessibilityLabel + 'Label' + accessibilityLabelIndex,\n        testID: testID + 'Label' + testIDIndex,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 9\n        }\n      })));\n      return React.createElement(View, {\n        style: this.props.wrapStyle,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 7\n        }\n      }, renderContent);\n    }\n  }]);\n  return RadioButton;\n}(React.Component);\n\nexports.RadioButton = RadioButton;\nRadioButton.defaultProps = {\n  isSelected: false,\n  buttonColor: '#2196f3',\n  selectedButtonColor: '#2196f3',\n  labelHorizontal: true,\n  disabled: false,\n  idSeparator: '|'\n};\n\nvar RadioButtonInput = function (_React$Component3) {\n  (0, _inherits2.default)(RadioButtonInput, _React$Component3);\n\n  var _super3 = _createSuper(RadioButtonInput);\n\n  function RadioButtonInput(props) {\n    var _this4;\n\n    (0, _classCallCheck2.default)(this, RadioButtonInput);\n    _this4 = _super3.call(this, props);\n    _this4.state = {\n      isSelected: false,\n      buttonColor: props.buttonColor || '#2196f3'\n    };\n    return _this4;\n  }\n\n  (0, _createClass2.default)(RadioButtonInput, [{\n    key: \"render\",\n    value: function render() {\n      var _this5 = this;\n\n      var innerSize = {\n        width: 20,\n        height: 20,\n        borderRadius: 20 / 2\n      };\n      var outerSize = {\n        width: 20 + 10,\n        height: 20 + 10,\n        borderRadius: (20 + 10) / 2\n      };\n\n      if (this.props.buttonSize) {\n        innerSize.width = this.props.buttonSize;\n        innerSize.height = this.props.buttonSize;\n        innerSize.borderRadius = this.props.buttonSize / 2;\n        outerSize.width = this.props.buttonSize + 10;\n        outerSize.height = this.props.buttonSize + 10;\n        outerSize.borderRadius = (this.props.buttonSize + 10) / 2;\n      }\n\n      if (this.props.buttonOuterSize) {\n        outerSize.width = this.props.buttonOuterSize;\n        outerSize.height = this.props.buttonOuterSize;\n        outerSize.borderRadius = this.props.buttonOuterSize / 2;\n      }\n\n      var outerColor = this.props.buttonOuterColor;\n      var borderWidth = this.props.borderWidth || 3;\n      var innerColor = this.props.buttonInnerColor;\n\n      if (this.props.buttonColor) {\n        outerColor = this.props.buttonColor;\n        innerColor = this.props.buttonColor;\n      }\n\n      var c = React.createElement(View, {\n        style: [_Style.default.radioNormal, this.props.isSelected && _Style.default.radioActive, this.props.isSelected && innerSize, this.props.isSelected && {\n          backgroundColor: innerColor\n        }],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 7\n        }\n      });\n      var radioStyle = [_Style.default.radio, {\n        borderColor: outerColor,\n        borderWidth: borderWidth\n      }, this.props.buttonStyle, outerSize];\n\n      if (this.props.disabled) {\n        return React.createElement(View, {\n          style: this.props.buttonWrapStyle,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 9\n          }\n        }, React.createElement(View, {\n          style: radioStyle,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 11\n          }\n        }, c));\n      }\n\n      return React.createElement(View, {\n        style: this.props.buttonWrapStyle,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 7\n        }\n      }, React.createElement(TouchableOpacity, {\n        accessible: this.props.accessible,\n        accessibilityLabel: this.props.accessibilityLabel,\n        testID: this.props.testID,\n        style: radioStyle,\n        onPress: function onPress() {\n          _this5.props.onPress(_this5.props.obj.value, _this5.props.index);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 9\n        }\n      }, c));\n    }\n  }]);\n  return RadioButtonInput;\n}(React.Component);\n\nexports.RadioButtonInput = RadioButtonInput;\nRadioButtonInput.defaultProps = {\n  buttonInnerColor: '#2196f3',\n  buttonOuterColor: '#2196f3',\n  disabled: false\n};\n\nvar RadioButtonLabel = function (_React$Component4) {\n  (0, _inherits2.default)(RadioButtonLabel, _React$Component4);\n\n  var _super4 = _createSuper(RadioButtonLabel);\n\n  function RadioButtonLabel(props) {\n    var _this6;\n\n    (0, _classCallCheck2.default)(this, RadioButtonLabel);\n    _this6 = _super4.call(this, props);\n    _this6.state = {\n      isSelected: false,\n      buttonColor: '#2196f3'\n    };\n    return _this6;\n  }\n\n  (0, _createClass2.default)(RadioButtonLabel, [{\n    key: \"render\",\n    value: function render() {\n      var _this7 = this;\n\n      return React.createElement(TouchableWithoutFeedback, {\n        accessible: this.props.accessible,\n        accessibilityLabel: this.props.accessibilityLabel,\n        testID: this.props.testID,\n        onPress: function onPress() {\n          if (!_this7.props.disabled) {\n            _this7.props.onPress(_this7.props.obj.value, _this7.props.index);\n          }\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 7\n        }\n      }, React.createElement(View, {\n        style: [this.props.labelWrapStyle, _Style.default.labelWrapStyle],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 9\n        }\n      }, React.createElement(Text, {\n        style: [_Style.default.radioLabel, !this.props.labelHorizontal && _Style.default.labelVertical, {\n          color: this.props.labelColor\n        }, this.props.labelStyle],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 11\n        }\n      }, this.props.obj.label)));\n    }\n  }]);\n  return RadioButtonLabel;\n}(React.Component);\n\nexports.RadioButtonLabel = RadioButtonLabel;","map":{"version":3,"sources":["C:/Users/mitba/Razorpay/p-indicator-1/node_modules/react-native-simple-radio-button/lib/SimpleRadioButton.js"],"names":["React","require","ReactNative","Text","View","TouchableOpacity","TouchableWithoutFeedback","LayoutAnimation","Platform","UIManager","RadioForm","props","state","is_active_index","initial","OS","setLayoutAnimationEnabledExperimental","_renderButton","bind","index","setState","onPress","radio_props","obj","i","accessible","accessibilityLabel","testID","selectedButtonColor","buttonColor","buttonSize","buttonOuterSize","labelHorizontal","selectedLabelColor","labelColor","labelStyle","radioStyle","animation","disabled","value","render_content","length","map","children","Style","radioFrom","style","formHorizontal","Component","defaultProps","wrapStyle","RadioButton","nextProps","nextState","spring","c","idSeparator","idSeparatorAccessibilityLabelIndex","indexOf","idSeparatorTestIdIndex","substring","accessibilityLabelIndex","testIDIndex","split","renderContent","radioWrap","labelVerticalWrap","isSelected","RadioButtonInput","innerSize","width","height","borderRadius","outerSize","outerColor","buttonOuterColor","borderWidth","innerColor","buttonInnerColor","radioNormal","radioActive","backgroundColor","radio","borderColor","buttonStyle","buttonWrapStyle","RadioButtonLabel","labelWrapStyle","radioLabel","labelVertical","color","label"],"mappings":"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","sourcesContent":["'use strict'\n\nimport Style from './Style.js'\n\nvar React = require('react')\nvar ReactNative = require('react-native')\nvar {\n  Text,\n  View,\n  TouchableOpacity,\n  TouchableWithoutFeedback,\n  LayoutAnimation,\n  Platform,\n  UIManager\n} = ReactNative\n\nexport default class RadioForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      is_active_index: props.initial\n    }\n    if (Platform.OS === 'android') {\n      UIManager.setLayoutAnimationEnabledExperimental && UIManager.setLayoutAnimationEnabledExperimental(true);\n    }\n    this._renderButton = this._renderButton.bind(this);\n  }\n  static defaultProps = {\n    radio_props: [],\n    initial: 0,\n    buttonColor: '#2196f3',\n    selectedButtonColor: '#2196f3',\n    formHorizontal: false,\n    labelHorizontal: true,\n    animation: true,\n    labelColor: '#000',\n    selectedLabelColor: '#000',\n    wrapStyle: {},\n    disabled: false\n  }\n\n  updateIsActiveIndex(index) {\n    this.setState({ is_active_index: index });\n    this.props.onPress(this.props.radio_props[index], index)\n  }\n\n  //This function is for clear the selection when we are using the library in multiple choice questions\n  clearSelection(){\n    this.setState({is_active_index:-1});\n  }\n\n  _renderButton(obj, i) {\n    return (\n      <RadioButton\n        accessible={this.props.accessible}\n        accessibilityLabel={(this.props.accessibilityLabel)\n          ? (this.props.accessibilityLabel + '|' + i) : ('radioButton' + '|' + i)}\n        testID={(this.props.testID)\n          ? (this.props.testID + '|' + i) : ('radioButton' + '|' + i)}\n        isSelected={this.state.is_active_index === i}\n        obj={obj}\n        key={i}\n        index={i}\n        buttonColor={this.state.is_active_index === i ? this.props.selectedButtonColor : this.props.buttonColor}\n        buttonSize={this.props.buttonSize}\n        buttonOuterSize={this.props.buttonOuterSize}\n        labelHorizontal={this.props.labelHorizontal}\n        labelColor={this.state.is_active_index === i ? this.props.selectedLabelColor : this.props.labelColor}\n        labelStyle={this.props.labelStyle}\n        style={this.props.radioStyle}\n        animation={this.props.animation}\n        disabled={this.props.disabled}\n        onPress={(value, index) => {\n          this.props.onPress(value, index)\n          this.setState({is_active_index: index})\n        }}\n      />\n    )\n  }\n\n  render() {\n    var render_content = false\n    if (this.props.radio_props.length) {\n      render_content = this.props.radio_props.map(this._renderButton)\n    } else {\n      render_content = this.props.children\n    }\n    return (\n      <View style={[\n        Style.radioFrom,\n        this.props.style,\n        this.props.formHorizontal && Style.formHorizontal\n      ]}>\n        {render_content}\n      </View>\n    )\n  }\n}\n\nexport class RadioButton extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n  shouldComponentUpdate(nextProps, nextState) {\n    return true\n  }\n  static defaultProps = {\n    isSelected: false,\n    buttonColor: '#2196f3',\n    selectedButtonColor: '#2196f3',\n    labelHorizontal: true,\n    disabled: false,\n    idSeparator: '|'\n  }\n  componentDidUpdate () {\n    if (this.props.animation) {\n      LayoutAnimation.spring()\n    }\n  }\n  render () {\n    var c = this.props.children\n\n    var idSeparator = (this.props.idSeparator) ? this.props.idSeparator : '|'\n    var idSeparatorAccessibilityLabelIndex = (this.props.accessibilityLabel)\n    ? this.props.accessibilityLabel.indexOf(idSeparator) : -1\n    var idSeparatorTestIdIndex = (this.props.testID)\n    ? this.props.testID.indexOf(idSeparator) : -1\n\n    var accessibilityLabel = (this.props.accessibilityLabel)\n    ? (idSeparatorAccessibilityLabelIndex !== -1\n    ? this.props.accessibilityLabel.substring(0, idSeparatorAccessibilityLabelIndex) : this.props.accessibilityLabel) : 'radioButton'\n    var testID = (this.props.testID)\n    ? (idSeparatorTestIdIndex !== -1\n    ? this.props.testID.substring(0, idSeparatorTestIdIndex) : this.props.testID) : 'radioButton'\n\n    var accessibilityLabelIndex = (this.props.accessibilityLabel && idSeparatorAccessibilityLabelIndex !== -1)\n    ? this.props.accessibilityLabel.substring(idSeparatorAccessibilityLabelIndex + 1) : ''\n    var testIDIndex = (this.props.testID && testIDIndex !== -1)\n    ? this.props.testID.split(testIDIndex + 1) : ''\n\n    var renderContent = false\n    renderContent = c ? (\n      <View style={[\n        Style.radioWrap,\n        this.props.style,\n        !this.props.labelHorizontal && Style.labelVerticalWrap\n      ]}>\n        {c}\n      </View>\n    ) : (\n      <View style={[\n        Style.radioWrap,\n        this.props.style,\n        !this.props.labelHorizontal && Style.labelVerticalWrap\n      ]}>\n        <RadioButtonInput {...this.props}\n          accessibilityLabel={accessibilityLabel + 'Input' + accessibilityLabelIndex}\n          testID={testID + 'Input' + testIDIndex} />\n        <RadioButtonLabel {...this.props}\n          accessibilityLabel={accessibilityLabel + 'Label' + accessibilityLabelIndex}\n          testID={testID + 'Label' + testIDIndex} />\n      </View>\n    )\n    return (\n      <View style={this.props.wrapStyle}>\n        {renderContent}\n      </View>\n    )\n  }\n}\n\nexport class RadioButtonInput extends React.Component {\n  constructor (props) {\n    super(props)\n    this.state = {\n      isSelected: false,\n      buttonColor: props.buttonColor || '#2196f3'\n    }\n  }\n  render () {\n    var innerSize = {width: 20, height:20, borderRadius: 20/2 }\n    var outerSize = {width: 20+10, height:20+10, borderRadius: (20+10)/2 }\n    if (this.props.buttonSize) {\n      innerSize.width = this.props.buttonSize\n      innerSize.height = this.props.buttonSize\n      innerSize.borderRadius = this.props.buttonSize /2\n      outerSize.width = this.props.buttonSize + 10\n      outerSize.height = this.props.buttonSize + 10\n      outerSize.borderRadius = (this.props.buttonSize + 10) / 2\n    }\n    if (this.props.buttonOuterSize) {\n      outerSize.width = this.props.buttonOuterSize\n      outerSize.height = this.props.buttonOuterSize\n      outerSize.borderRadius = this.props.buttonOuterSize / 2\n    }\n    var outerColor = this.props.buttonOuterColor\n    var borderWidth = this.props.borderWidth || 3\n    var innerColor = this.props.buttonInnerColor\n    if (this.props.buttonColor) {\n      outerColor = this.props.buttonColor\n      innerColor = this.props.buttonColor\n    }\n    var c = (\n      <View style={[\n        Style.radioNormal,\n        this.props.isSelected && Style.radioActive,\n        this.props.isSelected && innerSize,\n        this.props.isSelected && {backgroundColor:innerColor}\n      ]}></View>\n    )\n    var radioStyle = [\n      Style.radio,\n      {\n        borderColor:outerColor,\n        borderWidth:borderWidth\n      },\n      this.props.buttonStyle,\n      outerSize\n    ]\n\n    if (this.props.disabled) {\n      return (\n        <View style={this.props.buttonWrapStyle} >\n          <View style={radioStyle}>\n            {c}\n          </View>\n        </View>\n      )\n    }\n\n    return (\n      <View style={this.props.buttonWrapStyle} >\n        <TouchableOpacity\n          accessible={this.props.accessible}\n          accessibilityLabel={this.props.accessibilityLabel}\n          testID={this.props.testID}\n          style={radioStyle}\n          onPress={() => { this.props.onPress( this.props.obj.value, this.props.index) }\n          }>\n         {c}\n        </TouchableOpacity>\n      </View>\n    )\n  }\n}\n\nRadioButtonInput.defaultProps = {\n  buttonInnerColor: '#2196f3',\n  buttonOuterColor: '#2196f3',\n  disabled: false\n}\n\nexport class RadioButtonLabel extends React.Component {\n  constructor (props) {\n    super(props)\n    this.state = {\n      isSelected: false,\n      buttonColor: '#2196f3',\n    }\n  }\n  render () {\n    return (\n      <TouchableWithoutFeedback\n        accessible={this.props.accessible}\n        accessibilityLabel={this.props.accessibilityLabel}\n        testID={this.props.testID}\n        onPress={() => {\n        if (!this.props.disabled) {\n          this.props.onPress( this.props.obj.value, this.props.index)}\n        }\n      }>\n        <View style={[\n          this.props.labelWrapStyle,\n          Style.labelWrapStyle,\n        ]} >\n          <Text style={[\n            Style.radioLabel,\n            !this.props.labelHorizontal && Style.labelVertical,\n            {color: this.props.labelColor},\n            this.props.labelStyle\n          ]}>{this.props.obj.label}</Text>\n        </View>\n      </TouchableWithoutFeedback>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"script"}