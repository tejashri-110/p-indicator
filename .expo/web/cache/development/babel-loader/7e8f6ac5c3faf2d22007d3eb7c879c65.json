{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _reactNative = require(\"react-native\");\n\nvar _FirestoreBlob = _interopRequireDefault(require(\"./FirestoreBlob\"));\n\nvar _FirestoreFieldPath = _interopRequireDefault(require(\"./FirestoreFieldPath\"));\n\nvar _FirestoreFieldValue = _interopRequireDefault(require(\"./FirestoreFieldValue\"));\n\nvar _FirestoreGeoPoint = _interopRequireDefault(require(\"./FirestoreGeoPoint\"));\n\nvar _FirestoreTimestamp = _interopRequireDefault(require(\"./FirestoreTimestamp\"));\n\nvar _default = {\n  Blob: _FirestoreBlob.default,\n  FieldPath: _FirestoreFieldPath.default,\n  FieldValue: _FirestoreFieldValue.default,\n  GeoPoint: _FirestoreGeoPoint.default,\n  Timestamp: _FirestoreTimestamp.default,\n  CACHE_SIZE_UNLIMITED: -1,\n  setLogLevel: function setLogLevel(logLevel) {\n    if (logLevel !== 'debug' && logLevel !== 'error' && logLevel !== 'silent') {\n      throw new Error(\"firebase.firestore.setLogLevel(*) 'logLevel' expected one of 'debug', 'error' or 'silent'\");\n    }\n\n    var native = _reactNative.NativeModules.RNFBFirestoreModule;\n    native.setLogLevel(logLevel);\n  }\n};\nexports.default = _default;","map":{"version":3,"sources":["C:/Users/mitba/Razorpay/p-indicator-1/node_modules/@react-native-firebase/firestore/lib/FirestoreStatics.js"],"names":["Blob","FirestoreBlob","FieldPath","FirestoreFieldPath","FieldValue","FirestoreFieldValue","GeoPoint","FirestoreGeoPoint","Timestamp","FirestoreTimestamp","CACHE_SIZE_UNLIMITED","setLogLevel","logLevel","Error","native","NativeModules","RNFBFirestoreModule"],"mappings":";;;;;;;AAiBA;;AACA;;AACA;;AACA;;AACA;;AACA;;eAEe;AACbA,EAAAA,IAAI,EAAEC,sBADO;AAEbC,EAAAA,SAAS,EAAEC,2BAFE;AAGbC,EAAAA,UAAU,EAAEC,4BAHC;AAIbC,EAAAA,QAAQ,EAAEC,0BAJG;AAKbC,EAAAA,SAAS,EAAEC,2BALE;AAObC,EAAAA,oBAAoB,EAAE,CAAC,CAPV;AASbC,EAAAA,WATa,uBASDC,QATC,EASS;AACpB,QAAIA,QAAQ,KAAK,OAAb,IAAwBA,QAAQ,KAAK,OAArC,IAAgDA,QAAQ,KAAK,QAAjE,EAA2E;AACzE,YAAM,IAAIC,KAAJ,CACJ,2FADI,CAAN;AAGD;;AAED,QAAMC,MAAM,GAAGC,2BAAcC,mBAA7B;AACAF,IAAAA,MAAM,CAACH,WAAP,CAAmBC,QAAnB;AACD;AAlBY,C","sourcesContent":["/*\n * Copyright (c) 2016-present Invertase Limited & Contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this library except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\n\nimport { NativeModules } from 'react-native';\nimport FirestoreBlob from './FirestoreBlob';\nimport FirestoreFieldPath from './FirestoreFieldPath';\nimport FirestoreFieldValue from './FirestoreFieldValue';\nimport FirestoreGeoPoint from './FirestoreGeoPoint';\nimport FirestoreTimestamp from './FirestoreTimestamp';\n\nexport default {\n  Blob: FirestoreBlob,\n  FieldPath: FirestoreFieldPath,\n  FieldValue: FirestoreFieldValue,\n  GeoPoint: FirestoreGeoPoint,\n  Timestamp: FirestoreTimestamp,\n\n  CACHE_SIZE_UNLIMITED: -1,\n\n  setLogLevel(logLevel) {\n    if (logLevel !== 'debug' && logLevel !== 'error' && logLevel !== 'silent') {\n      throw new Error(\n        \"firebase.firestore.setLogLevel(*) 'logLevel' expected one of 'debug', 'error' or 'silent'\",\n      );\n    }\n\n    const native = NativeModules.RNFBFirestoreModule;\n    native.setLogLevel(logLevel);\n  },\n};\n"]},"metadata":{},"sourceType":"script"}