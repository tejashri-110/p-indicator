{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _assertThisInitialized2 = _interopRequireDefault(require(\"@babel/runtime/helpers/assertThisInitialized\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _config = _interopRequireDefault(require(\"../config\"));\n\nvar _firestore = _interopRequireDefault(require(\"@react-native-firebase/firestore\"));\n\nvar _AuthServices = _interopRequireDefault(require(\"./AuthServices\"));\n\nvar _jsxFileName = \"C:\\\\Users\\\\mitba\\\\Razorpay\\\\p-indicator-1\\\\screens\\\\registration.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nvar registration = function (_React$Component) {\n  (0, _inherits2.default)(registration, _React$Component);\n\n  var _super = _createSuper(registration);\n\n  function registration(props) {\n    var _this;\n\n    (0, _classCallCheck2.default)(this, registration);\n    _this = _super.call(this, props);\n    _this.state = {\n      username: \"\",\n      email: \"\",\n      password: \"\",\n      contact: \"\",\n      UID: ','\n    };\n    _this.buttonPress = _this.buttonPress.bind((0, _assertThisInitialized2.default)(_this));\n    _this.dbRef = _config.default.firestore().collection('Users');\n    return _this;\n  }\n\n  (0, _createClass2.default)(registration, [{\n    key: \"buttonPress\",\n    value: function buttonPress() {\n      var _this2 = this;\n\n      _AuthServices.default.signUp(this.state.email, this.state.password).then(function (userCredential) {\n        console.log(\"successed!!\");\n        var user = userCredential.user;\n\n        _this2.dbRef.doc(_AuthServices.default.Current().uid).set({\n          UserName: _this2.state.username,\n          Email: _this2.state.email,\n          contact: _this2.state.contact\n        }).then(function () {\n          console.log('User addedd!!!!');\n\n          _this2.props.navigation.navigate('loginpg');\n        }).catch(function (error) {\n          console.log(error);\n          alert(error);\n        });\n      }).catch(function (error) {\n        console.log(error);\n        alert(error);\n      });\n\n      console.log(this.state.username + \" \" + this.state.email + \" \" + this.state.password + \" \" + this.state.contact);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var buttonStylesubmit = {\n        color: \"#FFFFFF\",\n        backgroundColor: \"#008484\",\n        paddingBottom: \"17px\",\n        paddingTop: \"3px\",\n        paddingRight: \"18px\",\n        paddingLeft: \"18px\",\n        fontFamily: \"calibri\",\n        fontSize: \"35px\",\n        marginRight: \"80px\",\n        height: \"60px\",\n        width: \"350px\",\n        borderWidth: 6,\n        borderColor: \"#FFFFFF\",\n        marginLeft: 55,\n        marginBottom: 40,\n        marginTop: 20\n      };\n      var register = {\n        fontFamily: \"calibri\",\n        fontWeight: \"bold\",\n        fontSize: 20,\n        color: \"#008484\"\n      };\n      return _react.default.createElement(_reactNative.View, {\n        style: styles.container,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }\n      }, _react.default.createElement(_reactNative.Text, {\n        style: styles.logo,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 17\n        }\n      }, \"P-Indicator\"), _react.default.createElement(_reactNative.View, {\n        style: styles.inputView,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 17\n        }\n      }, _react.default.createElement(_reactNative.TextInput, {\n        style: styles.inputText,\n        placeholder: \"Enter your username...\",\n        placeholderTextColor: \"#808080\",\n        onChangeText: function onChangeText(text) {\n          return _this3.setState({\n            username: text\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 21\n        }\n      })), _react.default.createElement(_reactNative.View, {\n        style: styles.inputView,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 17\n        }\n      }, _react.default.createElement(_reactNative.TextInput, {\n        style: styles.inputText,\n        placeholder: \"Enter your Email...\",\n        placeholderTextColor: \"#808080\",\n        name: \"email\",\n        onChangeText: function onChangeText(text) {\n          return _this3.setState({\n            email: text\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 21\n        }\n      })), _react.default.createElement(_reactNative.View, {\n        style: styles.inputView,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 17\n        }\n      }, _react.default.createElement(_reactNative.TextInput, {\n        style: styles.inputText,\n        placeholder: \"Enter your Password...\",\n        placeholderTextColor: \"#808080\",\n        name: \"password\",\n        secureTextEntry: true,\n        onChangeText: function onChangeText(text) {\n          return _this3.setState({\n            password: text\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 21\n        }\n      })), _react.default.createElement(_reactNative.View, {\n        style: styles.inputView,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 17\n        }\n      }, _react.default.createElement(_reactNative.TextInput, {\n        style: styles.inputText,\n        placeholder: \"Enter your Contact number...\",\n        placeholderTextColor: \"#808080\",\n        onChangeText: function onChangeText(text) {\n          return _this3.setState({\n            contact: text\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 21\n        }\n      })), _react.default.createElement(_reactNative.View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 17\n        }\n      }, _react.default.createElement(_reactNative.TouchableHighlight, {\n        style: styles.button,\n        underlayColor: \"white\",\n        onPress: this.buttonPress,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 17\n        }\n      }, _react.default.createElement(_reactNative.Text, {\n        style: styles.buttonText,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 21\n        }\n      }, \"Register\"))));\n    }\n  }]);\n  return registration;\n}(_react.default.Component);\n\nexports.default = registration;\n\nvar styles = _reactNative.StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#008484\",\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  logo: {\n    fontWeight: \"bold\",\n    fontSize: 50,\n    color: \"#ffffff\",\n    marginBottom: 40\n  },\n  inputView: {\n    width: \"50%\",\n    backgroundColor: \"#ffffff\",\n    height: 40,\n    marginBottom: 20,\n    marginTop: 10,\n    justifyContent: \"center\",\n    padding: 10\n  },\n  EText: {\n    height: 20,\n    fontFamily: \"calibri\",\n    fontSize: 26,\n    marginRight: 600,\n    fontStyle: \"italic\",\n    color: \"#e1e1e1\",\n    alignItems: 'center',\n    padding: 10,\n    marginLeft: 10,\n    color: \"#FFFFFF\",\n    marginBottom: 15\n  },\n  inputText: {\n    height: 20,\n    fontSize: 16,\n    color: \"#000000\"\n  },\n  registerBtn: {\n    width: \"20%\",\n    backgroundColor: \"#e1e1e1\",\n    borderRadius: 10,\n    height: 40,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    marginTop: 20,\n    marginBottom: 30\n  }\n});","map":{"version":3,"sources":["C:/Users/mitba/Razorpay/p-indicator-1/screens/registration.js"],"names":["registration","props","state","username","email","password","contact","UID","buttonPress","bind","dbRef","firebase","firestore","collection","As","signUp","then","userCredential","console","log","user","doc","Current","uid","set","UserName","Email","navigation","navigate","catch","error","alert","buttonStylesubmit","color","backgroundColor","paddingBottom","paddingTop","paddingRight","paddingLeft","fontFamily","fontSize","marginRight","height","width","borderWidth","borderColor","marginLeft","marginBottom","marginTop","register","fontWeight","styles","container","logo","inputView","inputText","text","setState","button","buttonText","React","Component","StyleSheet","create","flex","alignItems","justifyContent","padding","EText","fontStyle","registerBtn","borderRadius"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { StyleSheet, Text, View, TextInput, TouchableOpacity ,TouchableHighlight} from 'react-native';\r\nimport firebase from \"../config\";\r\nimport firestore from '@react-native-firebase/firestore';\r\nimport As from './AuthServices';\r\n\r\nexport default class registration extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.buttonPress = this.buttonPress.bind(this);\r\n        this.dbRef = firebase.firestore().collection('Users');\r\n    }\r\n    state = {\r\n        username: \"\",\r\n        email: \"\",\r\n        password: \"\",\r\n        contact: \"\",\r\n        UID: ','\r\n    };\r\n\r\n    buttonPress() {\r\n\r\n\r\n        As.signUp(this.state.email, this.state.password)\r\n            .then((userCredential) => {\r\n                // Signed in\r\n                console.log(\"successed!!\");\r\n                var user = userCredential.user;\r\n                this.dbRef.doc(As.Current().uid).set({\r\n                    UserName: this.state.username,\r\n                    Email: this.state.email,\r\n                    contact: this.state.contact,\r\n                }).then(() => {\r\n                    console.log('User addedd!!!!');\r\n                    this.props.navigation.navigate('loginpg');\r\n                }).catch((error) => {\r\n                    console.log(error);\r\n                    alert(error);\r\n                });\r\n            })\r\n            .catch((error) => {\r\n                console.log(error);\r\n                alert(error);\r\n            });\r\n        console.log(this.state.username + \" \" + this.state.email + \" \" + this.state.password + \" \" + this.state.contact);\r\n    }\r\n\r\n    render() {\r\n\r\n        const buttonStylesubmit = {\r\n            color: \"#FFFFFF\",\r\n            backgroundColor: \"#008484\",\r\n            paddingBottom: \"17px\",\r\n            paddingTop: \"3px\",\r\n            paddingRight: \"18px\",\r\n            paddingLeft: \"18px\",\r\n            fontFamily: \"calibri\",\r\n            fontSize: \"35px\",\r\n            marginRight: \"80px\",\r\n            height: \"60px\",\r\n            width: \"350px\",\r\n            borderWidth: 6,\r\n            borderColor: \"#FFFFFF\",\r\n            marginLeft: 55,\r\n            marginBottom: 40,\r\n            marginTop: 20\r\n        }\r\n\r\n        const register = {\r\n            fontFamily: \"calibri\",\r\n            fontWeight: \"bold\",\r\n            fontSize: 20,\r\n            color: \"#008484\"\r\n        }\r\n\r\n        return (\r\n            <View style={styles.container}>\r\n                <Text style={styles.logo}>P-Indicator</Text>\r\n                {/* <Text style={styles.EText}>Username</Text> */}\r\n                <View style={styles.inputView} >\r\n                    <TextInput\r\n                        style={styles.inputText}\r\n                        placeholder=\"Enter your username...\"\r\n                        placeholderTextColor=\"#808080\"\r\n                        onChangeText={text => this.setState({ username: text })} />\r\n                </View>\r\n                {/* <Text style={styles.EText}>E-mail Id</Text> */}\r\n                <View style={styles.inputView} >\r\n                    <TextInput\r\n                        style={styles.inputText}\r\n                        placeholder=\"Enter your Email...\"\r\n                        placeholderTextColor=\"#808080\"\r\n                        name='email'\r\n                        onChangeText={text => this.setState({ email: text })} />\r\n                </View>\r\n                {/* <Text style={styles.EText}>Password</Text> */}\r\n                <View style={styles.inputView} >\r\n                    <TextInput\r\n                        style={styles.inputText}\r\n                        placeholder=\"Enter your Password...\"\r\n                        placeholderTextColor=\"#808080\"\r\n                        name='password'\r\n                        secureTextEntry\r\n                        onChangeText={text => this.setState({ password: text })} />\r\n                </View>\r\n                {/* <Text style={styles.EText}>Contact No</Text> */}\r\n                <View style={styles.inputView} >\r\n                    <TextInput\r\n                        style={styles.inputText}\r\n                        placeholder=\"Enter your Contact number...\"\r\n                        placeholderTextColor=\"#808080\"\r\n                        onChangeText={text => this.setState({ contact: text })} />\r\n                </View>\r\n                <View>\r\n                <TouchableHighlight\r\n                    style={styles.button}\r\n                    underlayColor=\"white\"\r\n                    onPress={this.buttonPress}\r\n                >\r\n                    <Text style={styles.buttonText}>Register</Text>\r\n                </TouchableHighlight>\r\n                </View>\r\n            </View>\r\n        );\r\n    }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        backgroundColor: \"#008484\",\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    logo: {\r\n        fontWeight: \"bold\",\r\n        fontSize: 50,\r\n        //fontFamily: \"calibri\",\r\n        color: \"#ffffff\",\r\n        marginBottom: 40\r\n    },\r\n    inputView: {\r\n        width: \"50%\",\r\n        backgroundColor: \"#ffffff\",\r\n        height: 40,\r\n        marginBottom: 20,\r\n        marginTop: 10,\r\n        justifyContent: \"center\",\r\n        padding: 10\r\n    },\r\n    EText: {\r\n        height: 20,\r\n        fontFamily: \"calibri\",\r\n        fontSize: 26,\r\n        marginRight: 600,\r\n        fontStyle: \"italic\",\r\n        color: \"#e1e1e1\",\r\n        alignItems: 'center',\r\n        padding: 10,\r\n        marginLeft: 10,\r\n        color: \"#FFFFFF\",\r\n        marginBottom: 15\r\n    },\r\n    inputText: {\r\n        height: 20,\r\n        //fontFamily: \"calibri\",\r\n        fontSize: 16,\r\n        //    fontStyle: \"italic\",\r\n        color: \"#000000\"\r\n    },\r\n    registerBtn: {\r\n        width: \"20%\",\r\n        backgroundColor: \"#e1e1e1\",\r\n        borderRadius: 10,\r\n        height: 40,\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\",\r\n        marginTop: 20,\r\n        marginBottom: 30\r\n    }\r\n});"]},"metadata":{},"sourceType":"script"}