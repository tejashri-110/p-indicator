{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _common = require(\"@react-native-firebase/app/lib/common\");\n\nvar FirestoreSnapshotMetadata = function () {\n  function FirestoreSnapshotMetadata(metadata) {\n    (0, _classCallCheck2.default)(this, FirestoreSnapshotMetadata);\n    this._metadata = metadata;\n  }\n\n  (0, _createClass2.default)(FirestoreSnapshotMetadata, [{\n    key: \"isEqual\",\n    value: function isEqual(other) {\n      if ((0, _common.isUndefined)(other) || !(other instanceof FirestoreSnapshotMetadata)) {\n        throw new Error(\"firebase.firestore() SnapshotMetadata.isEqual(*) 'other' expected instance of SnapshotMetadata\");\n      }\n\n      return this.fromCache === other.fromCache && this.hasPendingWrites === other.hasPendingWrites;\n    }\n  }, {\n    key: \"fromCache\",\n    get: function get() {\n      return this._metadata[0];\n    }\n  }, {\n    key: \"hasPendingWrites\",\n    get: function get() {\n      return this._metadata[1];\n    }\n  }]);\n  return FirestoreSnapshotMetadata;\n}();\n\nexports.default = FirestoreSnapshotMetadata;","map":{"version":3,"sources":["C:/Users/mitba/React Native/p-indicator-1/node_modules/@react-native-firebase/firestore/lib/FirestoreSnapshotMetadata.js"],"names":["FirestoreSnapshotMetadata","metadata","_metadata","other","Error","fromCache","hasPendingWrites"],"mappings":";;;;;;;;;;;AAiBA;;IAEqBA,yB;AACnB,qCAAYC,QAAZ,EAAsB;AAAA;AACpB,SAAKC,SAAL,GAAiBD,QAAjB;AACD;;;;4BAUOE,K,EAAO;AACb,UAAI,yBAAYA,KAAZ,KAAsB,EAAEA,KAAK,YAAYH,yBAAnB,CAA1B,EAAyE;AACvE,cAAM,IAAII,KAAJ,CACJ,gGADI,CAAN;AAGD;;AAED,aAAO,KAAKC,SAAL,KAAmBF,KAAK,CAACE,SAAzB,IAAsC,KAAKC,gBAAL,KAA0BH,KAAK,CAACG,gBAA7E;AACD;;;wBAhBe;AACd,aAAO,KAAKJ,SAAL,CAAe,CAAf,CAAP;AACD;;;wBAEsB;AACrB,aAAO,KAAKA,SAAL,CAAe,CAAf,CAAP;AACD","sourcesContent":["/*\n * Copyright (c) 2016-present Invertase Limited & Contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this library except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\n\nimport { isUndefined } from '@react-native-firebase/app/lib/common';\n\nexport default class FirestoreSnapshotMetadata {\n  constructor(metadata) {\n    this._metadata = metadata;\n  }\n\n  get fromCache() {\n    return this._metadata[0];\n  }\n\n  get hasPendingWrites() {\n    return this._metadata[1];\n  }\n\n  isEqual(other) {\n    if (isUndefined(other) || !(other instanceof FirestoreSnapshotMetadata)) {\n      throw new Error(\n        \"firebase.firestore() SnapshotMetadata.isEqual(*) 'other' expected instance of SnapshotMetadata\",\n      );\n    }\n\n    return this.fromCache === other.fromCache && this.hasPendingWrites === other.hasPendingWrites;\n  }\n}\n"]},"metadata":{},"sourceType":"script"}